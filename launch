#!/bin/sh
SHELL_PROGRAM=[=[
realpath() {
    OURPWD=$PWD
    cd "$(dirname "$1")"
    LINK=$(readlink "$(basename "$1")")
    while [ "$LINK" ]; do
        cd "$(dirname "$LINK")"
        LINK=$(readlink "$(basename "$1")")
    done
    REALPATH="$PWD/$(basename "$1")"
    cd "$OURPWD"
    echo "$REALPATH"
}

export APP_NAME="appexample"
export ARG_LINE="$*"
export SCRIPT_PATH=$(realpath "$0")
export STORAGE_PATH="$HOME/.$APP_NAME"


if [[ "$OSTYPE" == "darwin"* ]]>/dev/null 2>&1; then
    if [[ $0 =~ /Users/* ]]; then
        export RAN_FROM_EXPLORER=1
    fi
elif [ ! -t 1 ]; then
	export RAN_FROM_EXPLORER=1
fi

Main() {
	ARCH=unknown
	OS=unknown
	case $(uname -m) in x86_64) ARCH=x64;; i[36]86) ARCH=x86;; arm*) ARCH=arm;; esac
	case $(uname) in Darwin) OS=osx;; *) OS=linux;; esac

	DownloadLua "https://gitlab.com/CapsAdmin/goluwa-binaries-${OS}_${ARCH}/raw/master/luajit" "$STORAGE_PATH/${OS}_${ARCH}" "luajit"


	if [ "$((RAN_FROM_EXPLORER+0))" -eq 1 ]; then
		captured_output="$("$STORAGE_PATH/${OS}_${ARCH}/luajit" "$SCRIPT_PATH" 2>&1)"
	else
		"$STORAGE_PATH/${OS}_${ARCH}/luajit" "$SCRIPT_PATH"
	fi

	code=$?

	if [[ "$OSTYPE" == "darwin"* ]] >/dev/null 2>&1; then
		if [ $code -ne 0 ] && [ "$((RAN_FROM_EXPLORER+0))" -eq 1 ]; then
            echo $captured_output
			exit
		fi
		osascript -e 'tell application "Terminal" to quit' & exit
	elif [ "$((RAN_FROM_EXPLORER+0))" -eq 1 ]; then
		if [ $code -ne 0 ]; then
			xmessage "$captured_output"
		fi
	fi


}

DownloadLua() {
	url="$1"
	directory="$2"
	filename="$3"

    mkdir -p "$directory"

    if [ ! -f "$directory/lua_downloaded_and_validated" ]; then
        DownloadFile "$url" "$directory/$filename"

        echo "validating $directory/$filename .. "
        chmod +x "$directory/$filename"
        "$directory/$filename" -e "os.exit(1)"
        status=$?

        if [ $status -ne 1 ]; then
            echo "exit code 'os.exit(1)' does not match $status"
            echo "removing $directory/$filename in 5 seconds to try again"
			sleep 5s
            rm "$directory/$filename"
            Main
        else
			echo "validation successful"
            touch "$directory/lua_downloaded_and_validated"
        fi
    fi
}

DownloadFile () {
	url="$1"
	output_path="$2"

    if command -v wget >/dev/null 2>&1; then
        wget -O "$output_path" "$url"
    elif command -v curl >/dev/null 2>&1; then
        curl -L --url "$url" --output "$output_path"
    else
        echo "unable to find wget or curl"
        exit 1
    fi

    if [ $? -ne 0 ]; then
		echo "wget or curl failed with exit code $?"
		echo "cleaning up and exiting.."
        rm "$output_path"
        exit 1
    fi
}

Main

exit 0
]=]

function AlertBox(msg)
	if io.popen("command -v xmessage"):read("*all") ~= "" then
		local f = io.popen("xmessage -file -", "w")
		f:write(msg)
		f:close()
	else
		msg = msg:gsub("\n", "\\n")
		os.execute([[osascript -e 'tell app "System Events" to display dialog "]]..msg..[["']])
	end
end

function main(storage_path, script_path, arg_line)
	arg_line = arg_line or ""

    local msg = "hello from lua!\n" ..
	"storage path: " .. storage_path .. "\n" ..
    "script path: " ..script_path .. "\n" ..
    "arg line:" .. arg_line .. "\n"

	if os.getenv("RAN_FROM_EXPLORER") == "1" then
		print("some console text")
		print("some console text")
		print("some console text")
		AlertBox(msg)
	else
		print(msg)
	end
end

if os.getenv("RAN_FROM_EXPLORER") == "1" then
    os.execute("clear")
end

main(
	os.getenv("STORAGE_PATH"):gsub("\\", "/") .. "/",
	os.getenv("SCRIPT_PATH"):gsub("\\", "/"),
	os.getenv("ARG_LINE") or ""
)
